name: Build & Deploy to Minikube

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    # Only your self-hosted runner (the one you installed on your Minikube host)
    runs-on: self-hosted

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Ensure Minikube is running
        shell: powershell
        run: |
          if (-not (minikube status --format '{{.Host}}' -ErrorAction SilentlyContinue)) {
            minikube start
          }

      - name: Configure kubectl context
        shell: powershell
        run: kubectl config use-context minikube

      - name: Point Docker CLI at Minikubeâ€™s daemon
        shell: powershell
        run: |
          & minikube docker-env --shell powershell | Invoke-Expression

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & tag backend image
        shell: powershell
        run: |
          docker build `
            -t $Env:DOCKER_USERNAME/idurar-erp-crm-backend:latest `
            -f backend/Dockerfile backend

      - name: Build & tag frontend image
        shell: powershell
        run: |
          docker build `
            -t $Env:DOCKER_USERNAME/idurar-frontend:latest `
            -f frontend/Dockerfile frontend

      - name: Push backend image to Docker Hub
        shell: powershell
        run: docker push $Env:DOCKER_USERNAME/idurar-erp-crm-backend:latest

      - name: Push frontend image to Docker Hub
        shell: powershell
        run: docker push $Env:DOCKER_USERNAME/idurar-frontend:latest

      - name: Deploy to Minikube (apply k8s)
        shell: powershell
        run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Wait for rollout to complete
        shell: powershell
        run: |
          kubectl rollout status deployment/mongo -n idurar
          kubectl rollout status deployment/backend -n idurar
          kubectl rollout status deployment/frontend -n idurar
